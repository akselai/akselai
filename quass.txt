0.8888888888888888888889
0.7745966692414833770359
0.5555555555555555555556
0.6222222222222222222222
0.5773502691896257645092
0.4909090909090909090909
0.9258200997725514615666
0.1979797979797979797979
0.4509165386584741423451
0.4342437493468025580021
0.4013974147759622229051
0.7745966692414833770359
0.2684880898683334407286
0.9604912687080202834235
0.1046562260264672651938
0.3464429818901363616810
0.3399810435848562648027
0.3269491896014516295585
0.6402862174963099824047
0.2667983404522844480328
0.8611363115940525752240
0.1700536053357227268027
0.9765602507375731115345
0.0629773736654730147655
0.2829874178574912132043
0.2796304131617831934135
0.2728498019125589223410
0.5384693101056830910363
0.2410403392286475866999
0.7541667265708492204408
0.1868007965564926574678
0.9061798459386639927976
0.1152333166224733940246
0.9840853600948424644962
0.0425820367510818328645
0.2410725801734647619106
0.2386191860831969086310
0.2337708641169944066228
0.4631182124753046121568
0.2132096522719622791629
0.6612093864662645136610
0.1810719943231376151870
0.8213733408650279400457
0.1373206046344469230872
0.9324695142031520278123
0.0836944404469066261330
0.9887032026126788575047
0.0303961541198197688520
0.2094821410847278280130
0.2077849550078984676007
0.2044329400752988924140
0.4058451513773971669066
0.1903505780647854099130
0.5860872354676911302941
0.1690047266392679028266
0.7415311855993944398639
0.1406532597155259187452
0.8648644233597690727897
0.1047900103222501838400
0.9491079123427585245262
0.0630920926299785532907
0.9914553711208126392069
0.0229353220105292249637
0.1844464057446916435290
0.1834346424956498049395
0.1814000250680346430618
0.3607010979281319571925
0.1720706085552113118570
0.5255324099163289858177
0.1566526061681884004903
0.6723540709451586771563
0.1362631092551722152623
0.7966664774136267395920
0.1116463708268396132220
0.8941209068474564219484
0.0824822989313583306886
0.9602898564975362316836
0.0494393950021393085000
0.9933798758817161559359
0.0178223833207103551528
0.1648960128283494332287
0.1642235636149867614394
0.1628628274401150631740
0.3242534234038089290385
0.1564135277884838655771
0.4754624791124598889554
0.1452395883843661621710
0.6133714327005903973087
0.1300014068553411967250
0.7344867651839337916098
0.1117891346844182733403
0.8360311073266357942994
0.0907906816887263868511
0.9149635072496778539614
0.0665181559402741432380
0.9681602395076260898356
0.0396318951602612550782
0.9946781606773402425263
0.0143047756438389372319
gaussian(-kronrod) quadrature, up to 19 points.
the (2n+1) point quadrature data shall be found at the (n^2)th line.
data shall be read in alternating (x_i)s and (w_i)s, ignoring the first zero.
for example, 3 point quadrature shall be calculated:
function quass3(f, a, b) {
    var m = 0;
    b = (b - a)/2;
    m += f(a + b) * 0.88...;
    m+= f(a + b + b * 0.77...) * 0.55...;
    m+= f(a + b + b * -0.77...) * 0.55...;
    return m * b;
}
data from https://keisan.casio.com/exec/system/1289382036
